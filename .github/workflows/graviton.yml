name: graviton
on: [push, pull_request]

jobs:

  toolbox:
    runs-on: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      #     - name: Set up QEMU
      #       run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes --credential yes

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Build
        run: |
          cd toolbox
          docker buildx build --tag faddat/toolbox --platform linux/arm64 --push --cache-from faddat/toolbox:cache --cache-to faddat/toolbox:cache --progress plain .


  sos-lite:
    runs-on: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      #      - name: Set up QEMU
      #        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes --credential yes

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Build
        run: |
          cd rpi/lite
          bash build.sh

      - name: Compress
        run: xz -T $(nproc) full/images/sos-full.img

      - name: Upload image
        uses: actions/upload-artifact@v2
        with:
          name: sos
          path: full/images/sos-full.img.xz



  sos-full:
    runs-on: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      #      - name: Set up QEMU
      #        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes --credential yes

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Build
        run: |
          cd full
          bash build.sh

      - name: Compress
        run: xz -T $(nproc) full/images/sos-full.img

      - name: Upload image
        uses: actions/upload-artifact@v2
        with:
          name: sos
          path: full/images/sos-full.img.xz

  c2:
    runs-on: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      #     - name: Set up QEMU
      #       run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes --credential yes

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Build
        run: |
          cd odroid-c2
          bash build.sh

      - name: Compress
        run: xz -T $(nproc) odroid-c2/images/c2.img

      - name: Upload image
        uses: actions/upload-artifact@v2
        with:
          name: sos
          path: odroid-c2/images/c2.img.xz
